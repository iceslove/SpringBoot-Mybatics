<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wx.example.dao.RoleDao" >
  <resultMap id="BaseResultMap" type="com.wx.example.entity.Role" >
    <result column="s_role_id" property="roleId" jdbcType="INTEGER" />
    <result column="s_role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="s_role_desc" property="roleDesc" jdbcType="VARCHAR" />
    <result column="s_role_order" property="roleSort" jdbcType="INTEGER" />
    <result column="s_role_fixed" property="roleFixed" jdbcType="INTEGER" />
    <result column="created_at" property="createTime" jdbcType="DATE" />
    <result column="updated_at" property="updateTime" jdbcType="DATE" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    s_role_id, s_role_name, s_role_desc,s_role_order,s_role_fixed,created_at,updated_at
  </sql>
  
  <select id="getRoleById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from s_role
    where s_role_id = #{roleId,jdbcType=INTEGER}
  </select>
  
  <select id="queryRoleByPage" parameterType="java.util.Map" resultMap="BaseResultMap">
	select <include refid="Base_Column_List" /> from s_role
	<where>
      <if test="keyword != null and keyword != ''">
        s_role_name like "%"#{keyword}"%"
      </if>
    </where>
    <if test="orderBy != null and orderBy != ''">
        order by ${orderBy} 
    </if>
  </select>

  <select id="getRoleList" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from s_role
  </select>
  
  <delete id="deleteRole" parameterType="java.lang.Integer" >
    delete from s_role
    where s_role_id = #{RoleId,jdbcType=INTEGER}
  </delete>
  
  <delete id="batchDeleteRole" parameterType="java.util.List">   
    <![CDATA[   
       delete from s_role where Role_id in
    ]]>
   <foreach collection="list" index="index" item="item" open="(" separator="," close=")">      
        #{item}      
   </foreach> 
 </delete>
  
  <insert id="insertRole" parameterType="com.wx.example.entity.Role" >
    insert into s_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        s_role_id,
      </if>
      <if test="roleName != null" >
        s_role_name,
      </if>
      <if test="roleDesc != null" >
        s_role_desc,
      </if>
      <if test="roleSort != null" >
        s_role_order,
      </if>
      <if test="roleFixed != null" >
        s_role_fixed,
      </if>
      <if test="createTime != null" >
        created_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null" >
        #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="roleSort != null" >
        #{roleSort,jdbcType=INTEGER},
      </if>
      <if test="roleFixed != null" >
        #{roleFixed,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  
  <update id="updateRole" parameterType="com.wx.example.entity.Role" >
    update s_role
    <trim suffixOverrides="," >
    <set >
      <if test="roleName != null" >
        s_role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null" >
        s_role_desc = #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="roleSort != null" >
        s_role_order = #{roleSort,jdbcType=INTEGER},
      </if>
      <if test="roleFixed != null" >
        s_role_fixed = #{roleFixed,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        updated_at = #{updateTime,jdbcType=DATE},
      </if>
    </set>
    </trim>
    where s_role_id = #{roleId,jdbcType=INTEGER}
  </update> 

</mapper>